- **`mkdir`** makes a new folder in the current directory.
- **`touch`** creates a new file with the name and extension given.
- **`rm`** deletes a file or folder. Use it with -r to force it to delete a folder even if there are still objects in the folder you are trying to delete.
- **`mv`** either *moves* or *renames* a file or folder, depending on how you use it
- To *rename* a file, you would do `mv <old-file-name> <new-file-name>`, without the `<` and `>`. For example:

```
mv myOldFile.js myAwesomeNewFile.js

```

- To move a file or folder to another directory, you would do `mv <file-to-move> <place-to-move-it-to>`, again without the `<` and `>`. For example:

```
mv fileToMove.js dev/

#(Moves this fileToMove.js file into the dev folder)

```

OR

```
mv fileToMove.txt ../../my-folder/things-i-save/notes/

#(Moves the file back two directories, forward into the my-folder directory, then forward again into the things-i-save directory, and forward again into the notes directory)

```

- **`cp [file to be copied] [where to put copy]`** copies the files that you name.
- **`cp -r [new directory name]`** will copy a directory.
- **`nano`** will open the nano text editor. If we say `nano [file that already exists]` we will be editing that file, but if we say `nano [new file that doesn't exist yet]` we will create a new file and start editing it.
    - At the bottom of Nano, we can see that if we hold down control and push "x" we will exit. While we exit, it asks us to push `y` to save, and then `enter` to confirm the file name.
- **`help`** gives a list of useful commands such as the one given in this list.- **`mkdir`** makes a new folder in the current directory.
- **`touch`** creates a new file with the name and extension given.
- **`rm`** deletes a file or folder. Use it with -r to force it to delete a folder even if there are still objects in the folder you are trying to delete.
- **`mv`** either *moves* or *renames* a file or folder, depending on how you use it
- To *rename* a file, you would do `mv <old-file-name> <new-file-name>`, without the `<` and `>`. For example:

```
mv myOldFile.js myAwesomeNewFile.js

```

- To move a file or folder to another directory, you would do `mv <file-to-move> <place-to-move-it-to>`, again without the `<` and `>`. For example:

```
mv fileToMove.js dev/

#(Moves this fileToMove.js file into the dev folder)

```

OR

```
mv fileToMove.txt ../../my-folder/things-i-save/notes/

#(Moves the file back two directories, forward into the my-folder directory, then forward again into the things-i-save directory, and forward again into the notes directory)

```

- **`cp [file to be copied] [where to put copy]`** copies the files that you name.
- **`cp -r [new directory name]`** will copy a directory.
- **`nano`** will open the nano text editor. If we say `nano [file that already exists]` we will be editing that file, but if we say `nano [new file that doesn't exist yet]` we will create a new file and start editing it.
    - At the bottom of Nano, we can see that if we hold down control and push "x" we will exit. While we exit, it asks us to push `y` to save, and then `enter` to confirm the file name.
- **`help`** gives a list of useful commands such as the one given in this list.- **`mkdir`** makes a new folder in the current directory.
- **`touch`** creates a new file with the name and extension given.
- **`rm`** deletes a file or folder. Use it with -r to force it to delete a folder even if there are still objects in the folder you are trying to delete.
- **`mv`** either *moves* or *renames* a file or folder, depending on how you use it
- To *rename* a file, you would do `mv <old-file-name> <new-file-name>`, without the `<` and `>`. For example:

```
mv myOldFile.js myAwesomeNewFile.js

```

- To move a file or folder to another directory, you would do `mv <file-to-move> <place-to-move-it-to>`, again without the `<` and `>`. For example:

```
mv fileToMove.js dev/

#(Moves this fileToMove.js file into the dev folder)

```

OR

```
mv fileToMove.txt ../../my-folder/things-i-save/notes/

#(Moves the file back two directories, forward into the my-folder directory, then forward again into the things-i-save directory, and forward again into the notes directory)

```

- **`cp [file to be copied] [where to put copy]`** copies the files that you name.
- **`cp -r [new directory name]`** will copy a directory.
- **`nano`** will open the nano text editor. If we say `nano [file that already exists]` we will be editing that file, but if we say `nano [new file that doesn't exist yet]` we will create a new file and start editing it.
    - At the bottom of Nano, we can see that if we hold down control and push "x" we will exit. While we exit, it asks us to push `y` to save, and then `enter` to confirm the file name.
- **`help`** gives a list of useful commands such as the one given in this list.
